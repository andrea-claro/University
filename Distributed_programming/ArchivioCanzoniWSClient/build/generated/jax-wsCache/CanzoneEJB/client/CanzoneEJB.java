
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CanzoneEJB", targetNamespace = "http://bussiness.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CanzoneEJB {


    /**
     * 
     * @return
     *     returns java.util.List<client.Canzone>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://bussiness.server/", className = "client.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://bussiness.server/", className = "client.FindAllResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/findAllRequest", output = "http://bussiness.server/CanzoneEJB/findAllResponse")
    public List<Canzone> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Canzone
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://bussiness.server/", className = "client.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://bussiness.server/", className = "client.FindByIdResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/findByIdRequest", output = "http://bussiness.server/CanzoneEJB/findByIdResponse")
    public Canzone findById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCanzone", targetNamespace = "http://bussiness.server/", className = "client.AddCanzone")
    @ResponseWrapper(localName = "addCanzoneResponse", targetNamespace = "http://bussiness.server/", className = "client.AddCanzoneResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/addCanzoneRequest", output = "http://bussiness.server/CanzoneEJB/addCanzoneResponse")
    public boolean addCanzone(
        @WebParam(name = "arg0", targetNamespace = "")
        Canzone arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeCanzone", targetNamespace = "http://bussiness.server/", className = "client.RemoveCanzone")
    @ResponseWrapper(localName = "removeCanzoneResponse", targetNamespace = "http://bussiness.server/", className = "client.RemoveCanzoneResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/removeCanzoneRequest", output = "http://bussiness.server/CanzoneEJB/removeCanzoneResponse")
    public boolean removeCanzone(
        @WebParam(name = "arg0", targetNamespace = "")
        Canzone arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateCanzone", targetNamespace = "http://bussiness.server/", className = "client.UpdateCanzone")
    @ResponseWrapper(localName = "updateCanzoneResponse", targetNamespace = "http://bussiness.server/", className = "client.UpdateCanzoneResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/updateCanzoneRequest", output = "http://bussiness.server/CanzoneEJB/updateCanzoneResponse")
    public boolean updateCanzone(
        @WebParam(name = "arg0", targetNamespace = "")
        Canzone arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Canzone>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByCat", targetNamespace = "http://bussiness.server/", className = "client.FindByCat")
    @ResponseWrapper(localName = "findByCatResponse", targetNamespace = "http://bussiness.server/", className = "client.FindByCatResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/findByCatRequest", output = "http://bussiness.server/CanzoneEJB/findByCatResponse")
    public List<Canzone> findByCat(
        @WebParam(name = "arg0", targetNamespace = "")
        Categoria arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Canzone>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByVotes", targetNamespace = "http://bussiness.server/", className = "client.FindByVotes")
    @ResponseWrapper(localName = "findByVotesResponse", targetNamespace = "http://bussiness.server/", className = "client.FindByVotesResponse")
    @Action(input = "http://bussiness.server/CanzoneEJB/findByVotesRequest", output = "http://bussiness.server/CanzoneEJB/findByVotesResponse")
    public List<Canzone> findByVotes(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
