
package client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GelatoEJB", targetNamespace = "http://bussiness.server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GelatoEJB {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addGelato", targetNamespace = "http://bussiness.server/", className = "client.AddGelato")
    @ResponseWrapper(localName = "addGelatoResponse", targetNamespace = "http://bussiness.server/", className = "client.AddGelatoResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/addGelatoRequest", output = "http://bussiness.server/GelatoEJB/addGelatoResponse")
    public boolean addGelato(
        @WebParam(name = "arg0", targetNamespace = "")
        Gelato arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeGelato", targetNamespace = "http://bussiness.server/", className = "client.RemoveGelato")
    @ResponseWrapper(localName = "removeGelatoResponse", targetNamespace = "http://bussiness.server/", className = "client.RemoveGelatoResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/removeGelatoRequest", output = "http://bussiness.server/GelatoEJB/removeGelatoResponse")
    public boolean removeGelato(
        @WebParam(name = "arg0", targetNamespace = "")
        Gelato arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateGelato", targetNamespace = "http://bussiness.server/", className = "client.UpdateGelato")
    @ResponseWrapper(localName = "updateGelatoResponse", targetNamespace = "http://bussiness.server/", className = "client.UpdateGelatoResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/updateGelatoRequest", output = "http://bussiness.server/GelatoEJB/updateGelatoResponse")
    public boolean updateGelato(
        @WebParam(name = "arg0", targetNamespace = "")
        Gelato arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<client.Gelato>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByPrice", targetNamespace = "http://bussiness.server/", className = "client.FindByPrice")
    @ResponseWrapper(localName = "findByPriceResponse", targetNamespace = "http://bussiness.server/", className = "client.FindByPriceResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/findByPriceRequest", output = "http://bussiness.server/GelatoEJB/findByPriceResponse")
    public List<Gelato> findByPrice(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<client.Gelato>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://bussiness.server/", className = "client.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://bussiness.server/", className = "client.FindAllResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/findAllRequest", output = "http://bussiness.server/GelatoEJB/findAllResponse")
    public List<Gelato> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns client.Gelato
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByName", targetNamespace = "http://bussiness.server/", className = "client.FindByName")
    @ResponseWrapper(localName = "findByNameResponse", targetNamespace = "http://bussiness.server/", className = "client.FindByNameResponse")
    @Action(input = "http://bussiness.server/GelatoEJB/findByNameRequest", output = "http://bussiness.server/GelatoEJB/findByNameResponse")
    public Gelato findByName(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
